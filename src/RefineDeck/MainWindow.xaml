<Window
    x:Class="RefineDeck.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="clr-namespace:RefineDeck.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:viewModels="clr-namespace:RefineDeck.ViewModels"
    Title="Refine deck"
    Width="1200"
    Height="900"
    d:DataContext="{d:DesignInstance Type=viewModels:MainWindowViewModel}"
    SnapsToDevicePixels="True"
    UseLayoutRounding="True"
    mc:Ignorable="d">
    <Window.Resources>
        <converters:ApprovalStatusToColorConverter x:Key="ApprovalStatusToColorConverter" />
        <converters:ApprovalStatusToSymbolConverter x:Key="ApprovalStatusToSymbolConverter" />
        <converters:TrueToVisibleConverter x:Key="TrueToVisibleConverter" />
        <converters:IsBusyToIsEnabledConverter x:Key="IsBusyToIsEnabledConverter" />
        <converters:BoolToFontWeightConverter x:Key="BoolToFontWeightConverter" />

        <Style x:Key="WysiwygDockPanel" TargetType="DockPanel">
            <Setter Property="Margin" Value="0,2,0,0" />
            <Setter Property="LastChildFill" Value="True" />
        </Style>

        <Style TargetType="ScrollViewer">
            <Setter Property="UseLayoutRounding" Value="True" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
        </Style>

        <Style x:Key="EditableText" TargetType="TextBox">
            <Setter Property="FontSize" Value="16" />
            <Setter Property="TextWrapping" Value="Wrap" />
            <Setter Property="TextAlignment" Value="Center" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="BorderBrush" Value="#ddd" />
            <Setter Property="Padding" Value="10,6" />
            <Setter Property="MinWidth" Value="100" />
            <Setter Property="AcceptsReturn" Value="True" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="MaxLines" Value="8" />
        </Style>

        <Style x:Key="SecondOpinionSuggestion" TargetType="TextBox">
            <Setter Property="FontSize" Value="13" />
            <Setter Property="TextWrapping" Value="Wrap" />
            <Setter Property="TextAlignment" Value="Left" />
            <Setter Property="Foreground" Value="OrangeRed" />
            <Setter Property="IsReadOnly" Value="True" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Padding" Value="0,1" />

        </Style>

        <Style x:Key="ResetButton" TargetType="Button">
            <Setter Property="DockPanel.Dock" Value="Right" />
            <Setter Property="MinWidth" Value="25" />
            <Setter Property="Margin" Value="3,0,0,0" />
            <Setter Property="Content" Value="↻" />
            <Setter Property="ToolTip" Value="Reset value" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Background" Value="White" />
            <Setter Property="IsTabStop" Value="false" />
        </Style>

        <Style x:Key="PlayButton" TargetType="Button">
            <Setter Property="DockPanel.Dock" Value="Right" />
            <Setter Property="Margin" Value="0,1,0,0" />
            <Setter Property="Padding" Value="5,0" />
            <Setter Property="HorizontalAlignment" Value="Center" />

            <Setter Property="FontSize" Value="20" />
            <Setter Property="Content" Value="▶" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="IsTabStop" Value="false" />
        </Style>


    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition
                Width="Auto"
                MinWidth="200"
                MaxWidth="500" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <!--  Panel with the words  -->
        <ListBox
            Grid.Row="0"
            Grid.Column="0"
            HorizontalContentAlignment="Stretch"
            IsTabStop="False"
            ItemsSource="{Binding Deck.Flashcards}"
            ScrollViewer.HorizontalScrollBarVisibility="Disabled"
            SelectedItem="{Binding SelectedFlashcard}">
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <DockPanel LastChildFill="True">
                        <TextBlock
                            DockPanel.Dock="Right"
                            Foreground="{Binding ApprovalStatus, Converter={StaticResource ApprovalStatusToColorConverter}}"
                            Text="{Binding ApprovalStatus, Converter={StaticResource ApprovalStatusToSymbolConverter}}" />

                        <TextBlock
                            DockPanel.Dock="Right"
                            Foreground="LimeGreen"
                            Text="👍"
                            Visibility="{Binding SecondOpinionConfirmedOk, Converter={StaticResource TrueToVisibleConverter}}" />

                        <TextBlock
                            DockPanel.Dock="Right"
                            Foreground="Salmon"
                            Text="⚠️"
                            Visibility="{Binding HasPendingQaSuggestionsSecondOpinion, Converter={StaticResource TrueToVisibleConverter}}" />

                        <TextBlock
                            DockPanel.Dock="Right"
                            Foreground="Orange"
                            Text="⚠️"
                            Visibility="{Binding HasPendingQaSuggestions, Converter={StaticResource TrueToVisibleConverter}}" />


                        <TextBlock
                            DockPanel.Dock="Left"
                            FontSize="14"
                            FontWeight="{Binding IsAnythingOverridden, Converter={StaticResource BoolToFontWeightConverter}}"
                            Text="{Binding Term}" />

                    </DockPanel>
                </DataTemplate>
            </ListBox.ItemTemplate>
            <ListBox.ItemContainerStyle>
                <Style TargetType="ListBoxItem">
                    <Setter Property="Padding" Value="0" />
                    <Setter Property="BorderThickness" Value="0" />
                </Style>
            </ListBox.ItemContainerStyle>

        </ListBox>

        <!--  Wysiwyg editor  -->
        <Border
            Grid.Row="0"
            Grid.Column="2"
            Width="320"
            Margin="20"
            Padding="0,0,0,13"
            VerticalAlignment="Top"
            Background="#eeeeee"
            BorderBrush="#e0e0e0"
            BorderThickness="1"
            CornerRadius="13">
            <Border.Effect>
                <DropShadowEffect BlurRadius="25" Color="#eee" />
            </Border.Effect>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <!--  Title bar with macOS style buttons  -->
                <Grid Grid.Row="0" HorizontalAlignment="Stretch">
                    <!--  Buttons container  -->
                    <StackPanel
                        Margin="13,2,2,2"
                        HorizontalAlignment="Left"
                        Orientation="Horizontal">
                        <!--  Close Button  -->
                        <Ellipse
                            Width="12"
                            Height="12"
                            Margin="0,5,5,5"
                            Fill="#FF5F57" />
                        <!--  Minimize Button  -->
                        <Ellipse
                            Width="12"
                            Height="12"
                            Margin="0,5,5,5"
                            Fill="#FFBD2E" />
                        <!--  Maximize Button  -->
                        <Ellipse
                            Width="12"
                            Height="12"
                            Margin="0,5,5,5"
                            Fill="#28C840" />
                    </StackPanel>
                </Grid>

                <ScrollViewer
                    Grid.Row="1"
                    Padding="10"
                    HorizontalAlignment="Stretch"
                    Background="White"
                    HorizontalScrollBarVisibility="Disabled"
                    VerticalScrollBarVisibility="Auto">
                    <StackPanel>
                        <DockPanel Style="{StaticResource WysiwygDockPanel}">
                            <Button
                                Click="ResetValue_OnClick"
                                IsEnabled="{Binding SelectedFlashcard.IsTermOverridden, FallbackValue=false}"
                                Style="{StaticResource ResetButton}"
                                Tag="Term" />

                            <Button
                                Click="UpdateAndPlayAudio_OnClick"
                                Style="{StaticResource PlayButton}"
                                Tag="Term" />

                            <TextBox
                                Style="{StaticResource EditableText}"
                                Text="{Binding SelectedFlashcard.Term, FallbackValue='[Card not selected]'}"
                                ToolTip="Term" />
                        </DockPanel>
                        <TextBox
                            Style="{StaticResource SecondOpinionSuggestion}"
                            Text="{Binding SelectedFlashcard.QaSuggestionsSecondOpinion.Suggestion.FrontSide_Question}"
                            Visibility="{Binding SelectedFlashcard.HasPendingQaSuggestionsSecondOpinionJsonTerm, Converter={StaticResource TrueToVisibleConverter}}" />
                        <Border
                            Height="1"
                            Margin="0,18"
                            Background="#bbb"
                            SnapsToDevicePixels="True" />

                        <DockPanel Style="{StaticResource WysiwygDockPanel}">
                            <Button
                                Click="ResetValue_OnClick"
                                IsEnabled="{Binding SelectedFlashcard.IsTermTranslationOverridden, FallbackValue=false}"
                                Style="{StaticResource ResetButton}"
                                Tag="TermTranslation" />

                            <Button
                                Click="UpdateAndPlayAudio_OnClick"
                                Style="{StaticResource PlayButton}"
                                Tag="TermTranslation" />

                            <TextBox
                                Style="{StaticResource EditableText}"
                                Text="{Binding SelectedFlashcard.TermTranslation, FallbackValue='[Card not selected]'}"
                                ToolTip="Term translation" />
                        </DockPanel>
                        <TextBox
                            Style="{StaticResource SecondOpinionSuggestion}"
                            Text="{Binding SelectedFlashcard.QaSuggestionsSecondOpinion.Suggestion.BackSide_Answer}"
                            Visibility="{Binding SelectedFlashcard.HasPendingQaSuggestionsSecondOpinionJsonTermTranslation, Converter={StaticResource TrueToVisibleConverter}}" />

                        <Image
                            Margin="0,15"
                            MouseWheel="ChangeImageOnScroll"
                            RenderOptions.BitmapScalingMode="HighQuality"
                            Source="{Binding SelectedFlashcard.SelectedImage}" />

                        <DockPanel Style="{StaticResource WysiwygDockPanel}">

                            <Button
                                Click="ResetValue_OnClick"
                                IsEnabled="{Binding SelectedFlashcard.IsSentenceExampleOverridden, FallbackValue=false}"
                                Style="{StaticResource ResetButton}"
                                Tag="SentenceExample" />

                            <Button
                                Click="UpdateAndPlayAudio_OnClick"
                                Style="{StaticResource PlayButton}"
                                Tag="SentenceExample" />

                            <TextBox
                                FontStyle="Italic"
                                Foreground="DimGray"
                                Style="{StaticResource EditableText}"
                                Text="{Binding SelectedFlashcard.SentenceExample, UpdateSourceTrigger=PropertyChanged, FallbackValue='[Card not selected]'}"
                                ToolTip="Sentence Example" />
                        </DockPanel>
                        <TextBox
                            Style="{StaticResource SecondOpinionSuggestion}"
                            Text="{Binding SelectedFlashcard.QaSuggestionsSecondOpinion.Suggestion.SentenceExample}"
                            Visibility="{Binding SelectedFlashcard.HasPendingQaSuggestionsSecondOpinionJsonSentenceExample, Converter={StaticResource TrueToVisibleConverter}}" />

                        <DockPanel Style="{StaticResource WysiwygDockPanel}">
                            <Button
                                Click="ResetValue_OnClick"
                                IsEnabled="{Binding SelectedFlashcard.IsSentenceExampleTranslationOverridden, FallbackValue=false}"
                                Style="{StaticResource ResetButton}"
                                Tag="SentenceExampleTranslation" />

                            <Button
                                Click="UpdateAndPlayAudio_OnClick"
                                Style="{StaticResource PlayButton}"
                                Tag="SentenceExampleTranslation" />

                            <TextBox
                                FontStyle="Italic"
                                Foreground="Gray"
                                Style="{StaticResource EditableText}"
                                Text="{Binding SelectedFlashcard.SentenceExampleTranslation, FallbackValue='[Card not selected]'}"
                                ToolTip="Sentence example translation" />
                        </DockPanel>
                        <TextBox
                            Style="{StaticResource SecondOpinionSuggestion}"
                            Text="{Binding SelectedFlashcard.QaSuggestionsSecondOpinion.Suggestion.SentenceExampleTranslation}"
                            Visibility="{Binding SelectedFlashcard.HasPendingQaSuggestionsSecondOpinionJsonSentenceExampleTranslation, Converter={StaticResource TrueToVisibleConverter}}" />

                        <TextBlock Margin="0,15,0,0">Optional remarks for a student:</TextBlock>
                        <DockPanel Style="{StaticResource WysiwygDockPanel}" ToolTip="Remarks from teacher to student">

                            <Button
                                Click="ResetValue_OnClick"
                                IsEnabled="{Binding SelectedFlashcard.IsRemarksFieldOverridden, FallbackValue=false}"
                                Style="{StaticResource ResetButton}"
                                Tag="Remarks" />

                            <TextBox
                                Style="{StaticResource EditableText}"
                                Text="{Binding SelectedFlashcard.Remarks, FallbackValue='[Card not selected]'}"
                                TextAlignment="Left" />

                        </DockPanel>
                        <TextBox
                            Style="{StaticResource SecondOpinionSuggestion}"
                            Text="{Binding SelectedFlashcard.QaSuggestionsSecondOpinion.Suggestion.RemarksFromTeacherToStudent}"
                            Visibility="{Binding SelectedFlashcard.HasPendingQaSuggestionsSecondOpinionJsonRemarks, Converter={StaticResource TrueToVisibleConverter}}" />

                        <UniformGrid
                            Height="40"
                            Margin="0,20,0,0"
                            HorizontalAlignment="Stretch"
                            Rows="1">
                            <Button
                                Margin="0,0,2,0"
                                Click="Reject_OnClick"
                                Foreground="DarkRed">
                                Reject
                            </Button>
                            <Button Click="Approve_OnClick" Foreground="DarkGreen">Approve</Button>
                        </UniformGrid>
                    </StackPanel>
                </ScrollViewer>
            </Grid>
        </Border>

        <GridSplitter
            Grid.Row="0"
            Grid.Column="1"
            Width="5"
            HorizontalAlignment="Center"
            VerticalAlignment="Stretch"
            IsTabStop="False"
            ResizeBehavior="PreviousAndNext"
            ResizeDirection="Columns" />


        <GridSplitter
            Grid.Row="0"
            Grid.Column="3"
            Width="5"
            HorizontalAlignment="Center"
            VerticalAlignment="Stretch"
            IsTabStop="False"
            ResizeBehavior="PreviousAndNext"
            ResizeDirection="Columns" />

        <GroupBox
            Grid.Row="0"
            Grid.Column="4"
            Padding="5"
            Header="QA remarks from AI agents"
            Visibility="{Binding SelectedFlashcard.HasAnyPendingQaSuggestions, Converter={StaticResource TrueToVisibleConverter}}">
            <ScrollViewer>
                <StackPanel>
                    <!--  Remarks from generator  -->
                    <DockPanel LastChildFill="True" Visibility="{Binding SelectedFlashcard.HasPendingQaSuggestions, Converter={StaticResource TrueToVisibleConverter}}">
                        <Button
                            Margin="5,0,0,0"
                            Padding="8"
                            Click="DismissWarning_OnClick"
                            DockPanel.Dock="Right"
                            Foreground="DarkRed"
                            IsTabStop="False">
                            Dismiss
                        </Button>
                        <TextBox
                            Height="Auto"
                            Padding="8"
                            Background="BlanchedAlmond"
                            BorderBrush="DarkOrange"
                            BorderThickness="1"
                            DockPanel.Dock="Bottom"
                            FontSize="15"
                            IsReadOnly="True"
                            Text="{Binding SelectedFlashcard.OriginalFlashcard.QaSuggestions, Mode=OneWay}"
                            TextWrapping="Wrap" />
                    </DockPanel>

                    <!--  Second opinion: remarks obtained by Refine deck from different model  -->
                    <DockPanel
                        Margin="0,1,0,0"
                        LastChildFill="True"
                        Visibility="{Binding SelectedFlashcard.HasPendingQaSuggestionsSecondOpinion, Converter={StaticResource TrueToVisibleConverter}}">
                        <Button
                            Margin="5,0,0,0"
                            Padding="8"
                            Click="DismissSecondOpinionWarning_OnClick"
                            DockPanel.Dock="Right"
                            Foreground="DarkRed"
                            IsTabStop="False">
                            Dismiss
                        </Button>
                        <TextBox
                            Height="Auto"
                            Padding="8"
                            Background="MistyRose"
                            BorderBrush="Salmon"
                            BorderThickness="1"
                            DockPanel.Dock="Bottom"
                            FontSize="15"
                            IsReadOnly="True"
                            Text="{Binding SelectedFlashcard.QaSuggestionsSecondOpinion.PlainText, Mode=OneWay}"
                            TextWrapping="Wrap" />
                    </DockPanel>
                </StackPanel>
            </ScrollViewer>
        </GroupBox>


        <StatusBar
            Grid.Row="1"
            Grid.Column="0"
            Grid.ColumnSpan="5">
            <StatusBar.ItemsPanel>
                <ItemsPanelTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </StatusBar.ItemsPanel>

            <StatusBarItem Grid.Column="0" ToolTip="Approved">
                <TextBlock DockPanel.Dock="Left" Foreground="DarkSeaGreen">
                    <Run>☑</Run>
                    <Run Text="{Binding NumApproved, Mode=OneWay}" />
                </TextBlock>
            </StatusBarItem>


            <StatusBarItem Grid.Column="1" ToolTip="Rejected">
                <TextBlock DockPanel.Dock="Left" Foreground="IndianRed">
                    <Run>⮽</Run>
                    <Run Text="{Binding NumRejected, Mode=OneWay}" />
                </TextBlock>
            </StatusBarItem>

            <StatusBarItem Grid.Column="4" ToolTip="Still need review">
                <TextBlock DockPanel.Dock="Left" Foreground="MediumPurple">
                    <Run>☐</Run>
                    <Run Text="{Binding NumPending, Mode=OneWay}" />
                </TextBlock>
            </StatusBarItem>

            <StatusBarItem Grid.Column="5" ToolTip="Warnings (from generator)">
                <TextBlock DockPanel.Dock="Left" Foreground="Orange">
                    <Run>⚠️</Run>
                    <Run Text="{Binding NumWarnings, Mode=OneWay}" />
                </TextBlock>
            </StatusBarItem>

            <StatusBarItem Grid.Column="6" ToolTip="Warnings (second opinion)">
                <TextBlock DockPanel.Dock="Left" Foreground="Salmon">
                    <Run>⚠️</Run>
                    <Run Text="{Binding NumWarningsSecondOpinion, Mode=OneWay}" />
                </TextBlock>
            </StatusBarItem>

            <StatusBarItem Grid.Column="7" HorizontalContentAlignment="Right">
                <StackPanel DockPanel.Dock="Right" Orientation="Horizontal">
                    <ProgressBar
                        Width="200"
                        Maximum="{Binding ImageQualityTotal}"
                        Visibility="{Binding PerformingImageQualityUpgrade, Converter={StaticResource TrueToVisibleConverter}}"
                        Value="{Binding ImageQualityProcessed}" />


                    <Button
                        Margin="5,0,0,0"
                        Padding="4,2"
                        Click="UpgradeQualityOfSelectedImages_OnClick"
                        IsEnabled="{Binding PerformingQualityAnalysis, Converter={StaticResource IsBusyToIsEnabledConverter}}">
                        Upgrade selected images quality
                    </Button>

                    <!--  Loading icon, visible only when PerformingQualityAnalysis is true  -->
                    <TextBlock
                        Margin="5,0,0,0"
                        Padding="4,2"
                        Visibility="{Binding PerformingQualityAnalysis, Converter={StaticResource TrueToVisibleConverter}}">
                        ⏳
                    </TextBlock>

                    <Button
                        Margin="5,0,0,0"
                        Padding="4,2"
                        Click="RunSecondaryQualityAssurance_OnClick"
                        IsEnabled="{Binding PerformingQualityAnalysis, Converter={StaticResource IsBusyToIsEnabledConverter}}">
                        Refresh QA remarks
                    </Button>


                    <Button
                        Margin="5,0,0,0"
                        Padding="4,2"
                        Click="ShowDiffInVsCode_OnClick">
                        Show diff in VS Code
                    </Button>

                    <Button
                        Margin="5,0,0,0"
                        Padding="4,2"
                        Click="SaveChanges_OnClick">
                        Save changes
                    </Button>

                    <Button
                        Margin="5,0,0,0"
                        Padding="4,2"
                        Click="ExportToAnkiDeck_OnClick">
                        Generate Anki deck
                    </Button>
                </StackPanel>
            </StatusBarItem>

        </StatusBar>


    </Grid>
</Window>
